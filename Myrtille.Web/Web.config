<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!--
    CAUTION! logging requires the ASP.NET IIS worker process to have write permission to the "log" folder.
    Among other options, you may grant the myrtille application pool ("IIS AppPool\MyrtilleAppPool") write permission to it (normally automatically set by the myrtille installer).
  -->

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Log4net" />
  </configSections>

  <log4net>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="LogFileAppender" />
    </root>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="log\Myrtille.Web.log" />
      <param name="AppendToFile" value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="10MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
  </log4net>

  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="Log4netTraceListener" type="Myrtille.Log.Log4netTraceListener, Myrtille.Common">
          <!-- trace level (Information, Warning or Error). CAUTION! Information level will hinder performance -->
          <filter type="Myrtille.Log.Log4netTraceFilter, Myrtille.Common" initializeData="Warning" />
        </add>
        <!-- disable output window traces. CAUTION! enabling the default output window will hinder performance -->
        <remove name="Default" />
      </listeners>
    </trace>
  </system.diagnostics>
  
  <system.web>
    <compilation defaultLanguage="C#" debug="true" targetFramework="4.0" />
    <httpRuntime requestValidationMode="2.0" maxRequestLength="102400" />
    <pages enableViewState="false" validateRequest="false" enableEventValidation="false" clientIDMode="AutoID" />
    <authorization>
      <allow users="*" />
    </authorization>
    <authentication mode="None" />
    <sessionState mode="InProc" cookieless="AutoDetect" timeout="20" />
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" culture="auto" uiCulture="auto" />
    <customErrors mode="Off"/>
  </system.web>
  
  <system.webServer>
    <defaultDocument>
      <files>
        <clear />
        <add value="Default.aspx" />
      </files>
    </defaultDocument>
    <urlCompression doDynamicCompression="false" />
    <staticContent>
      <mimeMap fileExtension=".webp" mimeType="image/webp" />
    </staticContent>
    <security>
      <requestFiltering>
        <fileExtensions>
          <add fileExtension=".pfx" allowed="false" />
        </fileExtensions>
      </requestFiltering>
    </security>
    <httpErrors errorMode="Detailed"/>
  </system.webServer>

  <system.serviceModel>

    <client>
      <endpoint address="http://localhost:8080/Myrtille/RemoteSessionProcess" binding="wsDualHttpBinding" bindingConfiguration="wsDualHttpBindingCallback" contract="Myrtille.Services.Contracts.IRemoteSessionProcess" />
      <endpoint address="http://localhost:8080/Myrtille/FileStorage" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingFileStorage" contract="Myrtille.Services.Contracts.IFileStorage"/>
    </client>
    
    <bindings>
      <wsDualHttpBinding>
        <binding name="wsDualHttpBindingCallback" receiveTimeout="infinite" maxReceivedMessageSize="2147483647">
          <security mode="Message" />
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <reliableSession inactivityTimeout="infinite" />
        </binding>
      </wsDualHttpBinding>
      <basicHttpBinding>
        <!-- buffer: 64KB; max size: 64MB -->
        <binding name="basicHttpBindingFileStorage" transferMode="Streamed" messageEncoding="Mtom" maxBufferSize="65536" maxReceivedMessageSize="67108864" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
    
  </system.serviceModel>

  <!--
  CAUTION! under Firefox, IE and Safari, the secure websocket scheme (wss://) is not supported out of the box when using a self-signed certificate
  problem is, even after having created a security exception (by browsing the website in https, then accept to continue), the browser reject all wss:// connections
  this is because the security exception was issued for port 443, not 8431
  as a workaround, assuming 8431 is the secure websockets port:
    
    1- in IIS config, set the https binding port to 8431 instead of 443; restart IIS
    2- browse https://yourserver:8431 and accept the security exception
    3- change back the https binding port to 443; restart IIS
      
  more details at https://bugzilla.mozilla.org/show_bug.cgi?id=594502
  this problem doesn't occurs on Chrome and Opera (lately, both use the same engine...)
  it shouldn't occur with a production certificate
  -->
  
  <appSettings>
    <add key="WebSocketServerPort" value="8181" />                                <!-- port must be opened on firewall -->
    <add key="WebSocketServerPortSecured" value="8431" />                         <!-- port must be opened on firewall -->
    <add key="vs:EnableBrowserLink" value="false" />                              <!-- disable Visual Studio SignalR -->
  </appSettings>
  
</configuration>